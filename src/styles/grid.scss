table{
	display: block; display: flex;
	flex-direction: column;
	flex-grow: 1;
	flex-shrink: 1;
	margin: 0 auto; //--for no-flex
	overflow: auto; //--scroll bar for old browsers smaller than grid
	@supports (display: flex){
		width: 100%; //--without this, margin auto causes width to shrink
	}
}
tbody{
	align-items: stretch;
	display: block; display: flex;
	flex-direction: column;
	flex-grow: 1;
	height: 100%;
	margin-bottom: 5px; //--fixes scrollbar problem in saf5, possibly ie11 / edge. gives a tiny bit of breathing room in modern
	th{
		position: absolute;
		left: 0;
	}
}
.c{
	border: 2px solid rgb(25,25,25); border: 2px solid rgba(25,25,25,0.8);
	border-radius: 45%;
	display: inline-block;
	flex-basis: 100%;
	height: $baseCellDiameter; //-# needed for no-flexbox. set to fixed value for really old browsers like ie5
	opacity: 0.8;
	overflow: hidden;
	padding: 0;
	position: relative;
	transition: opacity 0.1s ease, transform 0.14s ease-out;
	width: $baseCellDiameter; //-# needed for no-flexbox
	&:not(:target){
		height: 100%; //--flexbox browsers need to not have fixed height.  this works well enough for browsers not support `@supports` but is blocked from really old browsers
	}
	@supports (display: flex){
		&.c{ //--overcome `:not` hack above
			height: auto;
		}
	}
	//-!!
	// [data-transition='transition'] &{
	// 	transition: background 0.1s, opacity 0.1s ease, transform 0.14s ease-out;
	// }
	&:before{
		background: rgb(30,30,30);
		border-radius: 50%;
		content: '';
		display: block;
		height: 30%;
		left: 50%;
		opacity: 0.6;
		position: absolute;
		transform: translate(-55%, -45%);
		top: 50%;
		width: 30%;
	}
	&:hover{
		opacity: 1;
	}
	>abbr{
		border: 0;
		display: block;
		height: 100%;
		left: 0;
		position: absolute;
		text-decoration: none;
		top: 0;
		width: 100%;
		>b{
			@extend %sro;
		}
	}

	//--alive state
	&.alive{
		background: $color-liveCell;
		&:hover{
			transform: scalex(0.9) scaley(0.6);
		}
		//-!! for wiggle
		// [data-active='active'][data-wiggle='wiggle'] &{
		// 	animation: wiggleCellA 0.8s infinite;
		// 	animation: wiggleCellB 0.8s infinite;
		// 	will-change: opacity transform;
		// }
	}
	&.dead{
		background: $color-deadCell;
		// transform: scale(0.9) skewX(5deg); //-# want this, perf is terrible though
	}

}
//--variants
// tr:nth-child(3n+1) &:nth-child(5n+1), tr:nth-child(5n+3) &:nth-child(9n+1){
.c1{
	transform: scale(0.95) skewX(-3deg);
	&:before{
		height: 40%;
		opacity: 0.5;
		transform: translate(-40%, -30%);
		width: 30%;
	}
}
// tr:nth-child(5n+2) &:nth-child(9n+2), tr:nth-child(2n+4) &:nth-child(13n+8){
.c2{
	transform: scale(0.88);
	&:before{
		height: 20%;
		opacity: 0.8;
		transform: translate(-70%, -20%);
		width: 30%;
	}
}
// tr:nth-child(2n+3) &:nth-child(13n+3), tr:nth-child(12n+4) &:nth-child(7n+3){
.c3{
	transform: scale(0.95) skewY(2deg);
	&:before{
		height: 50%;
		opacity: 0.4;
		transform: skewY(10deg) translate(-20%, -70%);
		width: 40%;
	}
}
.c4{
// tr:nth-child(6n+5) &:nth-child(8n+6), tr:nth-child(9n+7) &:nth-child(5n+4){
	transform: scale(0.9) skew(3deg);
	&:before{
		height: 35%;
		opacity: 0.5;
		transform: translate(-15%, -55%);
		width: 45%;
	}
}
.c5{
	&:before{
		height: 40%;
		transform: skewX(5deg) translate(-59%, -24%);
		width: 50%;
	}
}
//-!! for wiggle
// @keyframes wiggleCellA{
// 	0%{
// 		transform: scale(1) skewX(0) skewY(0);
// 	}
// 	20%{
// 		transform: scale(0.95) skewX(5deg) skewY(-3deg);
// 	}
// 	40%{
// 		transform: scale(0.97) skewX(-8deg) skewY(4deg);
// 	}
// 	60%{
// 		transform: scale(0.99) skewX(2deg) skewY(0);
// 	}
// 	80%{
// 		transform: scale(0.94) skewX(6deg) skewY(-2deg);
// 	}
// 	100%{
// 		transform: scale(1) skewX(0) skewY(0);
// 	}
// }
// @keyframes wiggleCellB{
// 	0%{
// 		transform: scale(1) rotate(0);
// 	}
// 	20%{
// 		transform: scale(0.95) rotate(4deg);
// 	}
// 	40%{
// 		transform: scale(0.97) rotate(-8deg);
// 	}
// 	60%{
// 		transform: scale(0.99) rotate(2deg);
// 	}
// 	80%{
// 		transform: scale(0.94) rotate(-5deg);
// 	}
// 	100%{
// 		transform: scale(1) rotate(0);
// 	}
// }
tr{
	align-items: stretch;
	display: block; display: flex;
	flex-basis: 100%;
	flex-direction: row;
	flex-grow: 1;
	height: $baseCellDiameter; //-# needed for no-flexbox
	text-align: center; //-# needed for no-flexbox
	white-space: nowrap;
	@supports (display: flex){ //--newer browsers won't have a minimum height
		height: auto;
	}
}
th, thead{
	@extend %sro;
	display: block;
}
